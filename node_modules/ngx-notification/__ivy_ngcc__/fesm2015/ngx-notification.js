import { Injectable, Component, NgModule, defineInjectable } from '@angular/core';
import { Subject } from 'rxjs';
import { CommonModule } from '@angular/common';
import { BrowserModule } from '@angular/platform-browser';

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';

function NgxNotificationComponent_div_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div");
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵclassMapInterpolate2("ngx-notification ", ctx_r0.message.position, " ", ctx_r0.message.theme, " show");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ctx_r0.message == null ? null : ctx_r0.message.text);
} }
class NgxNotificationService {
    constructor() {
        this.subject = new Subject();
    }
    /**
     * @param {?} message
     * @param {?} theme
     * @param {?} position
     * @return {?}
     */
    sendMessage(message, theme, position) {
        this.subject.next({
            text: message,
            theme: theme,
            position: position
        });
    }
    /**
     * @return {?}
     */
    clearMessage() {
        this.subject.next();
    }
    /**
     * @return {?}
     */
    getMessage() {
        return this.subject.asObservable();
    }
}
NgxNotificationService.ɵfac = function NgxNotificationService_Factory(t) { return new (t || NgxNotificationService)(); };
NgxNotificationService.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: NgxNotificationService, factory: NgxNotificationService.ɵfac, providedIn: 'root' });
/** @nocollapse */
NgxNotificationService.ctorParameters = () => [];
/** @nocollapse */ NgxNotificationService.ngInjectableDef = defineInjectable({ factory: function NgxNotificationService_Factory() { return new NgxNotificationService(); }, token: NgxNotificationService, providedIn: "root" });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgxNotificationService, [{
        type: Injectable,
        args: [{
                providedIn: 'root'
            }]
    }], function () { return []; }, null); })();

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
class NgxNotificationComponent {
    /**
     * @param {?} ngxNotificationService
     */
    constructor(ngxNotificationService) {
        this.ngxNotificationService = ngxNotificationService;
        this.message = {};
        this.subscription = this.ngxNotificationService.getMessage()
            .subscribe(message => {
            this.show = true;
            this.message = message;
            console.log(this.message);
            this.autoHideMessage();
        });
    }
    /**
     * @return {?}
     */
    ngOnInit() { }
    /**
     * @return {?}
     */
    ngOnDestroy() {
        this.subscription.unsubscribe();
    }
    /**
     * @return {?}
     */
    autoHideMessage() {
        setTimeout(() => {
            this.show = false;
        }, 5000);
    }
}
NgxNotificationComponent.ɵfac = function NgxNotificationComponent_Factory(t) { return new (t || NgxNotificationComponent)(ɵngcc0.ɵɵdirectiveInject(NgxNotificationService)); };
NgxNotificationComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: NgxNotificationComponent, selectors: [["lib-ngx-notification"]], decls: 1, vars: 1, consts: [[3, "class", 4, "ngIf"]], template: function NgxNotificationComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, NgxNotificationComponent_div_0_Template, 2, 5, "div", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngIf", ctx.show);
    } }, directives: [ɵngcc1.NgIf], styles: [".ngx-notification.dark[_ngcontent-%COMP%] {\n    background-color: #2d2d30;\n    border-color: #272729;\n    color: #c9c9c9;\n  }\n  .ngx-notification.light[_ngcontent-%COMP%] {\n    background-color: #ffffff;\n    border-color: #cccccc;\n    color: #2d2d30;\n  }\n  .ngx-notification.success[_ngcontent-%COMP%] {\n    background-color: #dff0d8;\n      border-color: #d0e9c6;\n      color: #3c763d;\n  }\n  .ngx-notification.info[_ngcontent-%COMP%] {\n    background-color: #d9edf7;\n    border-color: #bcdff1;\n    color: #31708f;\n  }\n  .ngx-notification.warning[_ngcontent-%COMP%] {\n    background-color: #fcf8e3;\n    border-color: #faf2cc;\n    color: #8a6d3b;\n  }\n  .ngx-notification.danger[_ngcontent-%COMP%] {\n    background-color: #f2dede;\n    border-color: #ebcccc;\n    color: #a94442;\n  }\n  .ngx-notification.top-left[_ngcontent-%COMP%] {\n    position: fixed;\n    left: 10px;\n    top: 10px;\n  }\n  .ngx-notification.top-right[_ngcontent-%COMP%] {\n    position: fixed;\n    right: 10px;\n    top: 10px;\n  }\n  .ngx-notification.bottom-right[_ngcontent-%COMP%] {\n    position: fixed;\n    right: 10px;\n    bottom: 10px;\n  }\n  .ngx-notification.bottom-left[_ngcontent-%COMP%] {\n    position: fixed;\n    left: 10px;\n    bottom: 10px;\n  }\n  .ngx-notification.center[_ngcontent-%COMP%] {\n    position:absolute;\n      top: 50%;\n      left: 50%;\n      margin-top: -9em;\n      margin-left: -15em;\n  }\n  .ngx-notification[_ngcontent-%COMP%] {\n    padding: .75rem 1.25rem;\n    margin-bottom: 1rem;\n    border: 1px solid transparent;\n    border-radius: .25rem;\n    -webkit-animation: fadein 1.5s, fadeout 1.5s 3.5s;\n    animation: fadein 1.5s, fadeout 1.5s 3.5s;\n    z-index : 1;\n  }\n\n  \n  @-webkit-keyframes fadein {\n    from {opacity: 0;}\n    to {opacity: 1;}\n  }\n\n  @keyframes fadein {\n    from {opacity: 0;}\n    to {opacity: 1;}\n  }\n\n  @-webkit-keyframes fadeout {\n    from {opacity: 1;}\n    to {opacity: 0;}\n  }\n\n  @keyframes fadeout {\n    from {opacity: 1;}\n    to {opacity: 0;}\n  }"] });
/** @nocollapse */
NgxNotificationComponent.ctorParameters = () => [
    { type: NgxNotificationService, },
];
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgxNotificationComponent, [{
        type: Component,
        args: [{
                selector: 'lib-ngx-notification',
                template: `<div *ngIf='show' class='ngx-notification {{ message.position }} {{ message.theme }} show'>{{message?.text }}</div>`,
                styles: [`
  .ngx-notification.dark {
    background-color: #2d2d30;
    border-color: #272729;
    color: #c9c9c9;
  }
  .ngx-notification.light {
    background-color: #ffffff;
    border-color: #cccccc;
    color: #2d2d30;
  }
  .ngx-notification.success {
    background-color: #dff0d8;
      border-color: #d0e9c6;
      color: #3c763d;
  }
  .ngx-notification.info {
    background-color: #d9edf7;
    border-color: #bcdff1;
    color: #31708f;
  }
  .ngx-notification.warning {
    background-color: #fcf8e3;
    border-color: #faf2cc;
    color: #8a6d3b;
  }
  .ngx-notification.danger {
    background-color: #f2dede;
    border-color: #ebcccc;
    color: #a94442;
  }
  .ngx-notification.top-left {
    position: fixed;
    left: 10px;
    top: 10px;
  }
  .ngx-notification.top-right {
    position: fixed;
    right: 10px;
    top: 10px;
  }
  .ngx-notification.bottom-right {
    position: fixed;
    right: 10px;
    bottom: 10px;
  }
  .ngx-notification.bottom-left {
    position: fixed;
    left: 10px;
    bottom: 10px;
  }
  .ngx-notification.center {
    position:absolute;
      top: 50%;
      left: 50%;
      margin-top: -9em;
      margin-left: -15em;
  }
  .ngx-notification {
    padding: .75rem 1.25rem;
    margin-bottom: 1rem;
    border: 1px solid transparent;
    border-radius: .25rem;
    -webkit-animation: fadein 1.5s, fadeout 1.5s 3.5s;
    animation: fadein 1.5s, fadeout 1.5s 3.5s;
    z-index : 1;
  }

  /* Animations to fade the snackbar in and out */
  @-webkit-keyframes fadein {
    from {opacity: 0;}
    to {opacity: 1;}
  }

  @keyframes fadein {
    from {opacity: 0;}
    to {opacity: 1;}
  }

  @-webkit-keyframes fadeout {
    from {opacity: 1;}
    to {opacity: 0;}
  }

  @keyframes fadeout {
    from {opacity: 1;}
    to {opacity: 0;}
  }
  `]
            }]
    }], function () { return [{ type: NgxNotificationService }]; }, null); })();

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
class NgxNotificationModule {
}
NgxNotificationModule.ɵfac = function NgxNotificationModule_Factory(t) { return new (t || NgxNotificationModule)(); };
NgxNotificationModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: NgxNotificationModule });
NgxNotificationModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[
            CommonModule,
            BrowserModule
        ]] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgxNotificationModule, [{
        type: NgModule,
        args: [{
                imports: [
                    CommonModule,
                    BrowserModule
                ],
                declarations: [NgxNotificationComponent],
                exports: [NgxNotificationComponent]
            }]
    }], null, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgxNotificationModule, { declarations: function () { return [NgxNotificationComponent]; }, imports: function () { return [CommonModule,
        BrowserModule]; }, exports: function () { return [NgxNotificationComponent]; } }); })();

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */

export { NgxNotificationService, NgxNotificationComponent, NgxNotificationModule };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,