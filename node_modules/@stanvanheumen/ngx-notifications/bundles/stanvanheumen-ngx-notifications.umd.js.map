{
  "version": 3,
  "file": "stanvanheumen-ngx-notifications.umd.js",
  "sources": [
    "ng://@stanvanheumen/ngx-notifications/out/src/notifications.module.ts",
    "ng://@stanvanheumen/ngx-notifications/out/src/notifications-item/notifications-item.component.ts",
    "ng://@stanvanheumen/ngx-notifications/out/src/notifications-list/notifications-list.component.ts",
    "ng://@stanvanheumen/ngx-notifications/out/src/notifications.service.ts",
    "ng://@stanvanheumen/ngx-notifications/out/src/notifications.interface.ts"
  ],
  "sourcesContent": [
    "import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {NgxTranslationsModule} from '@stanvanheumen/ngx-translations';\r\n\r\nimport {NgxNotificationsListComponent} from './notifications-list/notifications-list.component';\r\nimport {NgxNotificationsItemComponent} from './notifications-item/notifications-item.component';\r\n\r\nimport {NotificationsService} from './notifications.service';\r\nimport {NotificationOptions} from './notifications.interface';\r\n\r\n@NgModule({\r\n    imports: [CommonModule, NgxTranslationsModule],\r\n    declarations: [NgxNotificationsListComponent, NgxNotificationsItemComponent],\r\n    exports: [NgxNotificationsListComponent]\r\n})\r\nexport class NgxNotificationsModule {\r\n\r\n    static forRoot(options: NotificationOptions = {}) {\r\n        return {\r\n            ngModule: NgxNotificationsModule,\r\n            providers: [\r\n                NotificationsService,\r\n                {provide: NotificationOptions, useValue: options}\r\n            ]\r\n        };\r\n    }\r\n\r\n}\r\n",
    "import {\r\n    ChangeDetectionStrategy, ChangeDetectorRef, Component, EventEmitter, Input, NgZone, OnDestroy, OnInit,\r\n    Output\r\n} from '@angular/core';\r\nimport {Notification} from '../notifications.interface';\r\n\r\n@Component({\r\n    selector: 'ngx-notifications-item',\r\n    template: `<div [ngClass]=\"notificationClasses\"\r\n     class=\"ngx-notification\">\r\n    <i class=\"material-icons ngx-notification-icon\">{{ notification.icon }}</i>\r\n\r\n    <div class=\"ngx-notification-data\">\r\n        <h1 class=\"ngx-notification-title\">{{ notification.title | translate }}</h1>\r\n        <p class=\"ngx-notification-text\">{{ notification.text | translate }}</p>\r\n    </div>\r\n\r\n    <div *ngIf=\"notification.closable\"\r\n         (click)=\"onDestroy.emit(notification)\"\r\n         class=\"ngx-notification-clear\">\r\n        <i class=\"material-icons\">clear</i>\r\n    </div>\r\n\r\n    <div *ngIf=\"notification.timeout > 0\"\r\n         [ngClass]=\"progressBarClasses\"\r\n         [style.width]=\"progressWidth\"\r\n         class=\"ngx-notification-progress\"></div>\r\n</div>`,\r\n    styles: [`.ngx-notification-icon{\n  margin-right:10px; }\n\n.ngx-notification-data{\n  width:100%; }\n\n.ngx-notification-title{\n  display:block;\n  font-size:16px;\n  max-width:100%;\n  overflow:hidden;\n  line-height:1.5;\n  white-space:nowrap;\n  margin:0 30px 4px 0;\n  text-overflow:ellipsis; }\n\n.ngx-notification-text{\n  margin:0;\n  line-height:1.3;\n  color:rgba(255, 255, 255, 0.6); }\n\n.ngx-notification{\n  color:white;\n  display:-webkit-box;\n  display:-ms-flexbox;\n  display:flex;\n  font-weight:500;\n  -webkit-user-select:none;\n     -moz-user-select:none;\n      -ms-user-select:none;\n          user-select:none;\n  position:relative;\n  border-radius:4px;\n  margin:10px 10px 0;\n  padding:10px 10px 14px;\n  -webkit-box-pack:center;\n      -ms-flex-pack:center;\n          justify-content:center;\n  font-family:'Roboto', sans-serif;\n  -webkit-box-shadow:0 1px 2px rgba(0, 0, 0, 0.2);\n          box-shadow:0 1px 2px rgba(0, 0, 0, 0.2); }\n  .ngx-notification--success{\n    background-color:#43a047;\n    border-left:4px solid #295f2d; }\n  .ngx-notification--error{\n    background-color:#be2c2c;\n    border-left:4px solid #7e2020; }\n  .ngx-notification--warning{\n    background-color:#f57f17;\n    border-left:4px solid #ac7a26; }\n    .ngx-notification--warning .ngx-notification-text{\n      color:rgba(0, 0, 0, 0.6); }\n  .ngx-notification--info{\n    background-color:#5e35b1;\n    border-left:4px solid #191b1f; }\n\n.ngx-notification-clear{\n  top:0;\n  right:0;\n  width:30px;\n  height:30px;\n  margin:5px;\n  display:-webkit-box;\n  display:-ms-flexbox;\n  display:flex;\n  cursor:pointer;\n  position:absolute;\n  border-radius:4px;\n  -webkit-box-align:center;\n      -ms-flex-align:center;\n          align-items:center;\n  -webkit-box-pack:center;\n      -ms-flex-pack:center;\n          justify-content:center;\n  -webkit-transition:background-color 200ms cubic-bezier(0, 0, 0.2, 1);\n  transition:background-color 200ms cubic-bezier(0, 0, 0.2, 1); }\n  .ngx-notification-clear:hover{\n    background-color:rgba(0, 0, 0, 0.15); }\n  .ngx-notification-clear:active{\n    background-color:rgba(0, 0, 0, 0.25); }\n\n.ngx-notification-progress{\n  left:0;\n  bottom:0;\n  height:4px;\n  position:absolute;\n  background-color:rgba(0, 0, 0, 0.2); }\n  .ngx-notification-progress--success{\n    background-color:#295f2d; }\n  .ngx-notification-progress--error{\n    background-color:#7e2020; }\n  .ngx-notification-progress--warning{\n    background-color:#ac7a26; }\n  .ngx-notification-progress--info{\n    background-color:#191b1f; }\n`],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    preserveWhitespaces: false\r\n})\r\nexport class NgxNotificationsItemComponent implements OnInit, OnDestroy {\r\n\r\n    // Input.\r\n    @Input() notification: Notification;\r\n\r\n    // Output.\r\n    @Output() onDestroy = new EventEmitter<Notification>();\r\n\r\n    // Data.\r\n    private progress = 0;\r\n    private count = 0;\r\n\r\n    // Helper variables.\r\n    private steps: number;\r\n    private speed: number;\r\n    private timer: number;\r\n    private startTime: number;\r\n    private difference: number;\r\n\r\n    constructor(private zone: NgZone,\r\n                private changeDetection: ChangeDetectorRef) {\r\n    }\r\n\r\n    get progressWidth() {\r\n        return Math.min(this.progress, 100) + '%';\r\n    }\r\n\r\n    get notificationClasses() {\r\n        return {\r\n            ['ngx-notification--' + this.notification.type]: true\r\n        };\r\n    }\r\n\r\n    get progressBarClasses() {\r\n        return {\r\n            ['ngx-notification-progress--' + this.notification.type]: true\r\n        };\r\n    }\r\n\r\n    ngOnInit() {\r\n        // Check if the notification timeout is not 0 and the platform is a browser.\r\n        if (this.notification.timeout <= 0 || setTimeout === undefined) {\r\n            this.notification.closable = true;\r\n            return;\r\n        }\r\n\r\n        // Start the timeout.\r\n        this.startTimeout();\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        // Check if clearTimeout exists.\r\n        if (this.notification.timeout <= 0 || setTimeout === undefined) {\r\n            return;\r\n        }\r\n\r\n        // Clear the timeout.\r\n        clearTimeout(this.timer);\r\n    }\r\n\r\n    private startTimeout() {\r\n        // Calculate the steps of the timeout.\r\n        this.steps = this.notification.timeout / 10;\r\n\r\n        // Calculate the speed of the timeout.\r\n        this.speed = this.notification.timeout / this.steps;\r\n\r\n        // Get the start time.\r\n        this.startTime = new Date().getTime();\r\n\r\n        // Set a new timer outside of Angular.\r\n        this.zone.runOutsideAngular(() => this.timer = setTimeout(this.instance, this.speed));\r\n    }\r\n\r\n    private instance = () => {\r\n        // Calculate the difference.\r\n        this.difference = (new Date().getTime() - this.startTime) - (this.count * this.speed);\r\n\r\n        // Add up the count.\r\n        if (this.count++ === this.steps) {\r\n            this.onDestroy.emit(this.notification);\r\n        }\r\n\r\n        // Add the steps to the progress.\r\n        this.progress += 100 / this.steps;\r\n\r\n        // Set a new timer.\r\n        this.timer = setTimeout(this.instance, (this.speed - this.difference));\r\n\r\n        // Run a new change detection cycle.\r\n        this.zone.run(() => this.changeDetection.detectChanges());\r\n    };\r\n\r\n}\r\n",
    "import {trigger, animate, style, transition, query, stagger, keyframes} from '@angular/animations';\r\nimport {ChangeDetectionStrategy, Component, OnInit} from '@angular/core';\r\nimport {NotificationsService} from '../notifications.service';\r\nimport {Notification} from '../notifications.interface';\r\nimport {Observable} from 'rxjs/Observable';\r\n\r\n@Component({\r\n    selector: 'ngx-notifications-list',\r\n    template: `<div *ngIf=\"notifications$ | async as notifications\" class=\"ngx-notifications-wrapper\">\r\n    <div [@listAnimation]=\"notifications.length\" class=\"ngx-notifications-list\">\r\n        <div *ngFor=\"let notification of notifications; trackBy: trackById\" class=\"ngx-notifications-item\">\r\n            <ngx-notifications-item [notification]=\"notification\"\r\n                                    (onDestroy)=\"onNotificationDestroy($event)\"></ngx-notifications-item>\r\n        </div>\r\n    </div>\r\n</div>`,\r\n    styles: [`.ngx-notifications-wrapper{\n  top:0;\n  left:0;\n  right:0;\n  bottom:0;\n  z-index:400;\n  position:fixed;\n  pointer-events:none; }\n\n.ngx-notifications-list{\n  padding:0;\n  width:100%;\n  display:block;\n  max-width:420px;\n  margin-left:auto;\n  position:relative; }\n\n.ngx-notifications-item{\n  margin:0;\n  padding:0;\n  pointer-events:all; }\n`],\r\n    animations: [trigger('listAnimation', [\r\n        transition('* => *', [\r\n            query(':enter', style({opacity: 0}), {optional: true}),\r\n            query(':enter', stagger('500ms', [\r\n                animate('500ms cubic-bezier(0, 0, .2, 1)', keyframes([\r\n                    style({opacity: 0, transform: 'translateX(50%)', offset: 0}),\r\n                    style({opacity: 1, transform: 'translateX(0)', offset: 1.0})\r\n                ]))\r\n            ]), {optional: true}),\r\n            query(':leave', stagger('500ms', [\r\n                animate('500ms cubic-bezier(0, 0, .2, 1)', keyframes([\r\n                    style({height: '*', opacity: 1, transform: 'translateX(0)', offset: 0}),\r\n                    style({height: '*', opacity: 0, transform: 'translateX(-25%)', offset: 0.9}),\r\n                    style({height: 0, opacity: 0, transform: 'translateX(-25%)', offset: 1.0})\r\n                ]))\r\n            ]), {optional: true})\r\n        ])\r\n    ])],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    preserveWhitespaces: false\r\n})\r\nexport class NgxNotificationsListComponent implements OnInit {\r\n\r\n    notifications$: Observable<Notification[]>;\r\n\r\n    trackById = (index: number, item: Notification) => {\r\n        return item.id;\r\n    };\r\n\r\n    constructor(private notifications: NotificationsService) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.notifications$ = this.notifications.items;\r\n    }\r\n\r\n    onNotificationDestroy(notification: Notification) {\r\n        this.notifications.delete(notification);\r\n    }\r\n\r\n}\r\n",
    "import {Notification, NotificationOptions, NotificationType} from './notifications.interface';\r\nimport {Translation} from '@stanvanheumen/ngx-translations';\r\nimport {BehaviorSubject} from 'rxjs/BehaviorSubject';\r\nimport {Injectable, Optional} from '@angular/core';\r\n\r\n@Injectable()\r\nexport class NotificationsService {\r\n\r\n    private readonly defaultTitles = {\r\n        [NotificationType.Success]: 'Action was successful',\r\n        [NotificationType.Error]: 'Action did fail',\r\n        [NotificationType.Warning]: 'Warning',\r\n        [NotificationType.Info]: 'Information'\r\n    };\r\n\r\n    private readonly defaultIcons = {\r\n        [NotificationType.Success]: 'check_circle',\r\n        [NotificationType.Error]: 'error_outline',\r\n        [NotificationType.Warning]: 'error_outline',\r\n        [NotificationType.Info]: 'info_outline'\r\n    };\r\n\r\n    private readonly defaultTimeout: number = 4000;\r\n    private readonly defaultClosable: boolean = true;\r\n\r\n    private list$ = new BehaviorSubject<Notification[]>([]);\r\n\r\n    constructor(@Optional() private options: NotificationOptions) {\r\n        if (!options) {\r\n            throw new Error('No NotificationOptions were received.');\r\n        }\r\n        this.defaultTimeout = options.timeout === undefined ? this.defaultTimeout : options.timeout;\r\n        this.defaultClosable = options.closable === undefined ? this.defaultClosable : options.closable;\r\n        this.defaultTitles = Object.assign(this.defaultTitles, options.titles || {});\r\n        this.defaultIcons = Object.assign(this.defaultIcons, options.icons || {});\r\n    }\r\n\r\n    get items() {\r\n        return this.list$;\r\n    }\r\n\r\n    success(text: string | Translation, timeout = this.defaultTimeout) {\r\n        this.create({text, timeout, type: NotificationType.Success});\r\n    }\r\n\r\n    error(text: string | Translation, timeout = this.defaultTimeout) {\r\n        this.create({text, timeout, type: NotificationType.Error});\r\n    }\r\n\r\n    warn(text: string | Translation, timeout = this.defaultTimeout) {\r\n        this.create({text, timeout, type: NotificationType.Warning});\r\n    }\r\n\r\n    info(text: string | Translation, timeout = this.defaultTimeout) {\r\n        this.create({text, timeout, type: NotificationType.Info});\r\n    }\r\n\r\n    create(notification: Notification) {\r\n        // Compose a new notification item.\r\n        const item = this.compose(notification);\r\n\r\n        // Add the notification to the list.\r\n        this.push(item);\r\n    }\r\n\r\n    transform(callback: (notifications: Notification[]) => Notification[]) {\r\n        const oldNotifications = this.list$.getValue();\r\n        const newNotifications = callback(oldNotifications);\r\n        this.list$.next(newNotifications);\r\n    }\r\n\r\n    delete(notification: Notification) {\r\n        return this.pull(notification);\r\n    }\r\n\r\n    private push(notification: Notification) {\r\n        // Get the current list.\r\n        const list = this.list$.getValue();\r\n\r\n        // Add the notification to the list.\r\n        list.push(notification);\r\n\r\n        // Push a new list.\r\n        this.list$.next(list);\r\n    }\r\n\r\n    private pull(notification: Notification) {\r\n        // Get the current list.\r\n        const list = this.list$.getValue();\r\n\r\n        // Remove the notifications with matching id's.\r\n        list.forEach((item, index) => {\r\n            if (item.id === notification.id) {\r\n                list.splice(index, 1);\r\n            }\r\n        });\r\n\r\n        // Push a new list.\r\n        this.list$.next(list);\r\n    }\r\n\r\n    private compose(notification: Notification) {\r\n        // Attach a random id to the notification.\r\n        notification.id = Math.random().toString(36).substr(2, 10);\r\n\r\n        // Set the default to true if none is set.\r\n        notification.closable = notification.closable !== undefined ? notification.closable : this.defaultClosable;\r\n\r\n        // Set a default title if none is set.\r\n        notification.title = notification.title || this.defaultTitles[notification.type];\r\n\r\n        // Set a default icon if none is set.\r\n        notification.icon = notification.icon || this.defaultIcons[notification.type];\r\n\r\n        // Set a default timeout if none is set.\r\n        notification.timeout = notification.timeout !== undefined ? notification.timeout : this.defaultTimeout;\r\n\r\n        // Return the composed notification.\r\n        return notification;\r\n    }\r\n\r\n}\r\n",
    "import {Translation} from '@stanvanheumen/ngx-translations';\r\n\r\nexport interface Notification {\r\n\r\n    /**\r\n     * The identifier of the notification.\r\n     */\r\n    id?: string;\r\n\r\n    /**\r\n     * An optional title for the notification (if not set, a default will be picked).\r\n     */\r\n    title?: string | Translation;\r\n\r\n    /**\r\n     * The text for the notification.\r\n     */\r\n    text: string | Translation;\r\n\r\n    /**\r\n     * The type of the notification.\r\n     */\r\n    type: NotificationType;\r\n\r\n    /**\r\n     * An optional amount of milliseconds before the notification should disappear (if not set, a default will be picked).\r\n     */\r\n    timeout?: number;\r\n\r\n    /**\r\n     * If the notification should be closable; Default is true.\r\n     */\r\n    closable?: boolean;\r\n\r\n    /**\r\n     * An optional icon for the notification (if not set, a default will be picked).\r\n     */\r\n    icon?: string;\r\n\r\n}\r\n\r\nexport enum NotificationType {\r\n    Success = 'success',\r\n    Error = 'error',\r\n    Warning = 'warning',\r\n    Info = 'info'\r\n}\r\n\r\nexport class NotificationOptions {\r\n    timeout?: number;\r\n\r\n    closable?: boolean;\r\n\r\n    titles?: {\r\n        success?: string;\r\n        error?: string;\r\n        warning?: string;\r\n        info?: string;\r\n    };\r\n\r\n    icons?: {\r\n        success?: string;\r\n        error?: string;\r\n        warning?: string;\r\n        info?: string;\r\n    };\r\n}\r\n"
  ],
  "names": [
    "CommonModule",
    "NgxTranslationsModule",
    "NgModule",
    "Output",
    "Input",
    "ChangeDetectorRef",
    "NgZone",
    "ChangeDetectionStrategy",
    "Component",
    "EventEmitter",
    "style",
    "animate",
    "keyframes",
    "query",
    "stagger",
    "transition",
    "trigger",
    "Optional",
    "Injectable",
    "BehaviorSubject"
  ],
  "mappings": "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"
}
