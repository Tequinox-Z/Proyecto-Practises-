import { Notification, NotificationOptions } from './notifications.interface';
import { Translation } from '@stanvanheumen/ngx-translations';
import { BehaviorSubject } from 'rxjs/BehaviorSubject';
export declare class NotificationsService {
    private options;
    private readonly defaultTitles;
    private readonly defaultIcons;
    private readonly defaultTimeout;
    private readonly defaultClosable;
    private list$;
    constructor(options: NotificationOptions);
    readonly items: BehaviorSubject<Notification[]>;
    success(text: string | Translation, timeout?: number): void;
    error(text: string | Translation, timeout?: number): void;
    warn(text: string | Translation, timeout?: number): void;
    info(text: string | Translation, timeout?: number): void;
    create(notification: Notification): void;
    transform(callback: (notifications: Notification[]) => Notification[]): void;
    delete(notification: Notification): void;
    private push(notification);
    private pull(notification);
    private compose(notification);
}
