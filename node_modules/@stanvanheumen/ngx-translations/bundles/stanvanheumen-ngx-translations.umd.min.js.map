{
  "version": 3,
  "file": "stanvanheumen-ngx-translations.umd.min.js",
  "sources": [
    "ng://@stanvanheumen/ngx-translations/node_modules/tslib/tslib.es6.js",
    "ng://@stanvanheumen/ngx-translations/out/src/translations.config.ts",
    "ng://@stanvanheumen/ngx-translations/out/src/translations.service.ts",
    "ng://@stanvanheumen/ngx-translations/out/src/translations.pipe.ts",
    "ng://@stanvanheumen/ngx-translations/out/src/translations.module.ts"
  ],
  "sourcesContent": [
    "/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator];\r\n    return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n",
    "export class TranslationsConfig {\r\n    production: boolean = false;\r\n    dictionary: Dictionary[] = [];\r\n}\r\n\r\nexport interface Dictionary {\r\n\r\n    /**\r\n     * The browser languages that should activate this data set.\r\n     */\r\n    languages: string[];\r\n\r\n    /**\r\n     * The data JSON.\r\n     */\r\n    data: object;\r\n\r\n    /**\r\n     * The name of the translation.\r\n     */\r\n    name: string;\r\n\r\n}\r\n\r\nexport interface Translation {\r\n\r\n    /**\r\n     * The token of the translation.\r\n     */\r\n    token: string;\r\n\r\n    /**\r\n     * The key-value extras.\r\n     */\r\n    data: TranslationExtras;\r\n\r\n}\r\n\r\nexport interface TranslationExtras {\r\n\r\n    /**\r\n     * The key-value extras.\r\n     */\r\n    [token: string]: string;\r\n\r\n}",
    "import {Translation, TranslationsConfig} from './translations.config';\r\nimport {StorageService} from '@stanvanheumen/ngx-storage';\r\nimport {BehaviorSubject} from 'rxjs/BehaviorSubject';\r\nimport {Injectable, Optional} from '@angular/core';\r\n\r\n@Injectable()\r\nexport class TranslationsService {\r\n\r\n    // The token used in the storage.\r\n    private readonly storageToken = '__NGX_CURRENT_LANGUAGE__';\r\n\r\n    // The available languages.\r\n    private readonly dictionary = [];\r\n\r\n    // The default dictionary.\r\n    private readonly defaultDictionary = [{languages: ['en-US', 'en'], data: null, name: 'English (English)'}];\r\n\r\n    // The current language.\r\n    private currentLanguage$ = new BehaviorSubject<string>(null);\r\n\r\n    constructor(private storage: StorageService,\r\n                @Optional() private config: TranslationsConfig) {\r\n        // Retrieve the dictionary from the config.\r\n        if (!this.config) {\r\n            this.config = {production: false, dictionary: []};\r\n        }\r\n\r\n        // Append the dictionary to the default dictionary.\r\n        this.dictionary = this.config.dictionary.concat(\r\n            this.defaultDictionary\r\n        );\r\n\r\n        // Check if the languages are all correct if the application is not in production mode.\r\n        if (!this.config.production && !this.validate()) {\r\n            console.warn('The language files have been compared and they have not passed the validation.');\r\n        }\r\n\r\n        // If the storage is enabled than retrieve the current language; else us an empty behavior subject.\r\n        const language$ = this.storage ?\r\n            this.storage.get<string>(this.storageToken) as BehaviorSubject<string>\r\n            : new BehaviorSubject<string>(null);\r\n        const language = language$.getValue();\r\n\r\n        // Verify the language.\r\n        const verifiedLanguage = this.verify(language);\r\n\r\n        // Use the verified language.\r\n        this.use(verifiedLanguage);\r\n    }\r\n\r\n    use(language: string) {\r\n        // Check if the language is supported; if not set the default language and warn the user.\r\n        if (!this.isLanguageSupported(language)) {\r\n            language = this.defaultDictionary[0].languages[0];\r\n            console.warn(\r\n                `The language is not supported; The language has been set to '${language}'`\r\n            );\r\n        }\r\n\r\n        // Submit a new language.\r\n        this.currentLanguage$.next(language);\r\n\r\n        // Save the new language in the storage if the storage exists.\r\n        if (this.storage) {\r\n            this.storage.set<string>(this.storageToken, language);\r\n        }\r\n    }\r\n\r\n    instant(data: string | Translation) {\r\n        return this.translate(data);\r\n    }\r\n\r\n    translate(item: string | Translation) {\r\n        // Retrieve the entire dictionary object.\r\n        const dictionary = this.getLanguageDictionary(this.currentLanguage$.getValue());\r\n\r\n        // Get the token.\r\n        const token = typeof item === 'object' ? item.token : item;\r\n        const data = typeof item === 'object' ? item.data : {};\r\n\r\n        // Get the sentence.\r\n        let sentence = null;\r\n\r\n        // Check if the dictionary exists.\r\n        if (dictionary) {\r\n            if (!dictionary[token]) {\r\n                // The key does not exist in the dictionary, so the user must be notified.\r\n                this.notify(`Key '${token}' was not found; ${token} was returned.`);\r\n                sentence = token;\r\n            } else {\r\n                // The key does exist, so return it.\r\n                sentence = dictionary[token];\r\n            }\r\n        } else {\r\n            // The language is the default.\r\n            sentence = token;\r\n        }\r\n\r\n        // Loop through each match to replace it with the supplied value.\r\n        (sentence.match(/\\${(.*?)}/g) || []).forEach(match => {\r\n            // Get the key without any other symbols.\r\n            const key = match.replace(/[${} ]/g, '');\r\n\r\n            // Split the key on the pipe symbol to get the other arguments.\r\n            const words = key.split('|');\r\n            if (words.length <= 0 || words.length > 2) {\r\n                return;\r\n            }\r\n\r\n            // Get the key.\r\n            let word = words[0];\r\n\r\n            // Check if it should be translated (default is yes).\r\n            if (data[word]) {\r\n                word = data[word];\r\n\r\n                if (words.length === 1 || (words[1] && words[1].split(',').indexOf('keep') === -1)) {\r\n                    word = this.translate(word);\r\n                }\r\n            }\r\n\r\n            // Do the other attributes.\r\n            if (words.length === 2) {\r\n                const actions = words[1].split(',');\r\n\r\n                actions.forEach(action => {\r\n                    if (action === 'lowercase') {\r\n                        word = word.toLowerCase();\r\n                    } else if (action === 'uppercase') {\r\n                        word = word.toUpperCase();\r\n                    } else if (action === 'ucfirst') {\r\n                        const character = word.charAt(0).toUpperCase();\r\n                        word = character + word.substr(1);\r\n                    }\r\n                });\r\n            }\r\n\r\n            sentence = sentence.replace(match, word);\r\n        });\r\n\r\n        return sentence;\r\n    }\r\n\r\n    getLanguage() {\r\n        return this.currentLanguage$.getValue();\r\n    }\r\n\r\n    getDictionary() {\r\n        return this.dictionary;\r\n    }\r\n\r\n    private verify(language: string) {\r\n        // Check if the language already exists.\r\n        if (language !== null && this.isLanguageSupported(language)) {\r\n            return language;\r\n        }\r\n\r\n        // Fetch the browser language.\r\n        let browserLanguage = this.getBrowserLanguage();\r\n\r\n        // Check if the browsers language is supported in the system.\r\n        if (!this.isLanguageSupported(browserLanguage)) {\r\n            browserLanguage = this.defaultDictionary[0].languages[0];\r\n        }\r\n\r\n        // If the browser language was not supported put one in the storage.\r\n        if (this.storage) {\r\n            this.storage.set<string>(this.storageToken, browserLanguage);\r\n        }\r\n\r\n        // Return the browser language.\r\n        return browserLanguage;\r\n    }\r\n\r\n    private getBrowserLanguage() {\r\n        let language = null;\r\n\r\n        // Check if the navigator exists.\r\n        if (!navigator) {\r\n            return language;\r\n        }\r\n\r\n        // Get the correct first language of the browser.\r\n        if (navigator.languages && navigator.languages.length) {\r\n            language = navigator.languages[0];\r\n        } else if (navigator['userLanguage']) {\r\n            language = navigator['userLanguage'];\r\n        } else {\r\n            language = navigator.language;\r\n        }\r\n\r\n        return language;\r\n    }\r\n\r\n    private getLanguageDictionary(language: string) {\r\n        for (let item of this.dictionary) {\r\n            if (item.languages.indexOf(language) > -1) {\r\n                return item.data;\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    private isLanguageSupported(language: string) {\r\n        for (let item of this.dictionary) {\r\n            if (item.languages.indexOf(language) > -1) {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    private validate() {\r\n        const array = [];\r\n\r\n        this.dictionary.forEach(language => {\r\n            if (!language.data) {\r\n                return;\r\n            }\r\n\r\n            const data = this.getKeys(language.data);\r\n            array.push(data);\r\n        });\r\n\r\n        const first = array[0] || [];\r\n\r\n        return array.every(element => this.compare(first, element));\r\n    }\r\n\r\n    private getKeys(object: object, identifier: string = null) {\r\n        const result = [];\r\n\r\n        Object.keys(object).forEach(key => {\r\n            const item = object[key];\r\n\r\n            if (typeof item === 'object') {\r\n                result.push(...this.getKeys(item, identifier ? (identifier + '.' + key) : key));\r\n            } else {\r\n                result.push(identifier ? (identifier + '.' + key) : key);\r\n            }\r\n        });\r\n\r\n        return result;\r\n    }\r\n\r\n    private compare(first: string[], second: string[]) {\r\n        if (first === second) {\r\n            return true;\r\n        }\r\n\r\n        if (first === null || second === null) {\r\n            return false;\r\n        }\r\n\r\n        let isValid = true;\r\n\r\n        if (first.length !== second.length) {\r\n            console.warn('The files have been compared and not every file has the same length.');\r\n            isValid = false;\r\n        }\r\n\r\n        for (let index = 0; index < first.length; ++index) {\r\n            if (first[index] !== second[index]) {\r\n                isValid = false;\r\n                console.warn(`Line ${index} did not equal the first language.json file; ${first[index]} !== ${second[index]}`);\r\n            }\r\n        }\r\n\r\n        return isValid;\r\n    }\r\n\r\n    private notify(message: string) {\r\n        if (this.config && this.config.production) {\r\n            console.warn(message);\r\n            return;\r\n        }\r\n        throw new Error(message);\r\n    }\r\n\r\n}\r\n",
    "import {Translation, TranslationExtras} from './translations.config';\r\nimport {Optional, Pipe, PipeTransform} from '@angular/core';\r\nimport {TranslationsService} from './translations.service';\r\n\r\n@Pipe({\r\n    name: 'translate'\r\n})\r\nexport class NgxTranslationsPipe implements PipeTransform {\r\n\r\n    constructor(@Optional() private translate: TranslationsService) {\r\n    }\r\n\r\n    transform(value: string | Translation, args: TranslationExtras = {}) {\r\n        // Check if the service was actually properly installed; if not return the value.\r\n        if (!this.translate) {\r\n            return value;\r\n        }\r\n\r\n        // If the value was not received properly return null.\r\n        if (!value) {\r\n            return null;\r\n        }\r\n\r\n        // Check if the arguments were formatted properly.\r\n        if (typeof args !== 'object') {\r\n            throw new Error('The arguments were not formatted properly.');\r\n        }\r\n\r\n        if (typeof value === 'string') {\r\n            value = {token: value, data: args};\r\n        }\r\n\r\n        // Translate the value.\r\n        return this.translate.instant(value);\r\n    }\r\n\r\n}\r\n",
    "import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {NgxStorageModule} from '@stanvanheumen/ngx-storage';\r\n\r\nimport {TranslationsService} from './translations.service';\r\nimport {NgxTranslationsPipe} from './translations.pipe';\r\nimport {TranslationsConfig} from './translations.config';\r\n\r\n@NgModule({\r\n    imports: [CommonModule, NgxStorageModule],\r\n    providers: [TranslationsService],\r\n    declarations: [NgxTranslationsPipe],\r\n    exports: [NgxTranslationsPipe]\r\n})\r\nexport class NgxTranslationsModule {\r\n\r\n    static forRoot(config: TranslationsConfig = {production: false, dictionary: []}) {\r\n        return {\r\n            ngModule: NgxTranslationsModule,\r\n            providers: [\r\n                {provide: TranslationsConfig, useValue: config}\r\n            ]\r\n        };\r\n    }\r\n\r\n}\r\n"
  ],
  "names": [
    "__values",
    "o",
    "m",
    "Symbol",
    "iterator",
    "i",
    "call",
    "next",
    "length",
    "value",
    "done",
    "__read",
    "n",
    "r",
    "e",
    "ar",
    "push",
    "error",
    "TranslationsConfig",
    "this",
    "production",
    "dictionary",
    "TranslationsService",
    "storage",
    "config",
    "storageToken",
    "defaultDictionary",
    "languages",
    "data",
    "name",
    "currentLanguage$",
    "BehaviorSubject",
    "concat",
    "validate",
    "console",
    "warn",
    "language",
    "get",
    "getValue",
    "verifiedLanguage",
    "verify",
    "use",
    "prototype",
    "isLanguageSupported",
    "set",
    "instant",
    "translate",
    "item",
    "_this",
    "getLanguageDictionary",
    "token",
    "sentence",
    "notify",
    "match",
    "forEach",
    "words",
    "replace",
    "split",
    "word",
    "indexOf",
    "action",
    "toLowerCase",
    "toUpperCase",
    "character",
    "charAt",
    "substr",
    "getLanguage",
    "getDictionary",
    "browserLanguage",
    "getBrowserLanguage",
    "navigator",
    "_a",
    "tslib_1.__values",
    "_b",
    "array",
    "getKeys",
    "first",
    "every",
    "element",
    "compare",
    "object",
    "identifier",
    "result",
    "Object",
    "keys",
    "key",
    "apply",
    "arguments",
    "__spread",
    "second",
    "isValid",
    "index",
    "message",
    "Error",
    "type",
    "Injectable",
    "StorageService",
    "decorators",
    "Optional",
    "NgxTranslationsPipe",
    "transform",
    "args",
    "Pipe",
    "NgxTranslationsModule",
    "forRoot",
    "ngModule",
    "providers",
    "provide",
    "useValue",
    "NgModule",
    "imports",
    "CommonModule",
    "NgxStorageModule",
    "declarations",
    "exports"
  ],
  "mappings": "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"
}
