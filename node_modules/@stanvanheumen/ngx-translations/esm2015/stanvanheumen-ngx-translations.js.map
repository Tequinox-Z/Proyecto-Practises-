{
  "version": 3,
  "file": "stanvanheumen-ngx-translations.js",
  "sources": [
    "ng://@stanvanheumen/ngx-translations/out/src/translations.module.ts",
    "ng://@stanvanheumen/ngx-translations/out/src/translations.pipe.ts",
    "ng://@stanvanheumen/ngx-translations/out/src/translations.service.ts",
    "ng://@stanvanheumen/ngx-translations/out/src/translations.config.ts"
  ],
  "sourcesContent": [
    "import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {NgxStorageModule} from '@stanvanheumen/ngx-storage';\r\n\r\nimport {TranslationsService} from './translations.service';\r\nimport {NgxTranslationsPipe} from './translations.pipe';\r\nimport {TranslationsConfig} from './translations.config';\r\n\r\n@NgModule({\r\n    imports: [CommonModule, NgxStorageModule],\r\n    providers: [TranslationsService],\r\n    declarations: [NgxTranslationsPipe],\r\n    exports: [NgxTranslationsPipe]\r\n})\r\nexport class NgxTranslationsModule {\r\n\r\n    static forRoot(config: TranslationsConfig = {production: false, dictionary: []}) {\r\n        return {\r\n            ngModule: NgxTranslationsModule,\r\n            providers: [\r\n                {provide: TranslationsConfig, useValue: config}\r\n            ]\r\n        };\r\n    }\r\n\r\n}\r\n",
    "import {Translation, TranslationExtras} from './translations.config';\r\nimport {Optional, Pipe, PipeTransform} from '@angular/core';\r\nimport {TranslationsService} from './translations.service';\r\n\r\n@Pipe({\r\n    name: 'translate'\r\n})\r\nexport class NgxTranslationsPipe implements PipeTransform {\r\n\r\n    constructor(@Optional() private translate: TranslationsService) {\r\n    }\r\n\r\n    transform(value: string | Translation, args: TranslationExtras = {}) {\r\n        // Check if the service was actually properly installed; if not return the value.\r\n        if (!this.translate) {\r\n            return value;\r\n        }\r\n\r\n        // If the value was not received properly return null.\r\n        if (!value) {\r\n            return null;\r\n        }\r\n\r\n        // Check if the arguments were formatted properly.\r\n        if (typeof args !== 'object') {\r\n            throw new Error('The arguments were not formatted properly.');\r\n        }\r\n\r\n        if (typeof value === 'string') {\r\n            value = {token: value, data: args};\r\n        }\r\n\r\n        // Translate the value.\r\n        return this.translate.instant(value);\r\n    }\r\n\r\n}\r\n",
    "import {Translation, TranslationsConfig} from './translations.config';\r\nimport {StorageService} from '@stanvanheumen/ngx-storage';\r\nimport {BehaviorSubject} from 'rxjs/BehaviorSubject';\r\nimport {Injectable, Optional} from '@angular/core';\r\n\r\n@Injectable()\r\nexport class TranslationsService {\r\n\r\n    // The token used in the storage.\r\n    private readonly storageToken = '__NGX_CURRENT_LANGUAGE__';\r\n\r\n    // The available languages.\r\n    private readonly dictionary = [];\r\n\r\n    // The default dictionary.\r\n    private readonly defaultDictionary = [{languages: ['en-US', 'en'], data: null, name: 'English (English)'}];\r\n\r\n    // The current language.\r\n    private currentLanguage$ = new BehaviorSubject<string>(null);\r\n\r\n    constructor(private storage: StorageService,\r\n                @Optional() private config: TranslationsConfig) {\r\n        // Retrieve the dictionary from the config.\r\n        if (!this.config) {\r\n            this.config = {production: false, dictionary: []};\r\n        }\r\n\r\n        // Append the dictionary to the default dictionary.\r\n        this.dictionary = this.config.dictionary.concat(\r\n            this.defaultDictionary\r\n        );\r\n\r\n        // Check if the languages are all correct if the application is not in production mode.\r\n        if (!this.config.production && !this.validate()) {\r\n            console.warn('The language files have been compared and they have not passed the validation.');\r\n        }\r\n\r\n        // If the storage is enabled than retrieve the current language; else us an empty behavior subject.\r\n        const language$ = this.storage ?\r\n            this.storage.get<string>(this.storageToken) as BehaviorSubject<string>\r\n            : new BehaviorSubject<string>(null);\r\n        const language = language$.getValue();\r\n\r\n        // Verify the language.\r\n        const verifiedLanguage = this.verify(language);\r\n\r\n        // Use the verified language.\r\n        this.use(verifiedLanguage);\r\n    }\r\n\r\n    use(language: string) {\r\n        // Check if the language is supported; if not set the default language and warn the user.\r\n        if (!this.isLanguageSupported(language)) {\r\n            language = this.defaultDictionary[0].languages[0];\r\n            console.warn(\r\n                `The language is not supported; The language has been set to '${language}'`\r\n            );\r\n        }\r\n\r\n        // Submit a new language.\r\n        this.currentLanguage$.next(language);\r\n\r\n        // Save the new language in the storage if the storage exists.\r\n        if (this.storage) {\r\n            this.storage.set<string>(this.storageToken, language);\r\n        }\r\n    }\r\n\r\n    instant(data: string | Translation) {\r\n        return this.translate(data);\r\n    }\r\n\r\n    translate(item: string | Translation) {\r\n        // Retrieve the entire dictionary object.\r\n        const dictionary = this.getLanguageDictionary(this.currentLanguage$.getValue());\r\n\r\n        // Get the token.\r\n        const token = typeof item === 'object' ? item.token : item;\r\n        const data = typeof item === 'object' ? item.data : {};\r\n\r\n        // Get the sentence.\r\n        let sentence = null;\r\n\r\n        // Check if the dictionary exists.\r\n        if (dictionary) {\r\n            if (!dictionary[token]) {\r\n                // The key does not exist in the dictionary, so the user must be notified.\r\n                this.notify(`Key '${token}' was not found; ${token} was returned.`);\r\n                sentence = token;\r\n            } else {\r\n                // The key does exist, so return it.\r\n                sentence = dictionary[token];\r\n            }\r\n        } else {\r\n            // The language is the default.\r\n            sentence = token;\r\n        }\r\n\r\n        // Loop through each match to replace it with the supplied value.\r\n        (sentence.match(/\\${(.*?)}/g) || []).forEach(match => {\r\n            // Get the key without any other symbols.\r\n            const key = match.replace(/[${} ]/g, '');\r\n\r\n            // Split the key on the pipe symbol to get the other arguments.\r\n            const words = key.split('|');\r\n            if (words.length <= 0 || words.length > 2) {\r\n                return;\r\n            }\r\n\r\n            // Get the key.\r\n            let word = words[0];\r\n\r\n            // Check if it should be translated (default is yes).\r\n            if (data[word]) {\r\n                word = data[word];\r\n\r\n                if (words.length === 1 || (words[1] && words[1].split(',').indexOf('keep') === -1)) {\r\n                    word = this.translate(word);\r\n                }\r\n            }\r\n\r\n            // Do the other attributes.\r\n            if (words.length === 2) {\r\n                const actions = words[1].split(',');\r\n\r\n                actions.forEach(action => {\r\n                    if (action === 'lowercase') {\r\n                        word = word.toLowerCase();\r\n                    } else if (action === 'uppercase') {\r\n                        word = word.toUpperCase();\r\n                    } else if (action === 'ucfirst') {\r\n                        const character = word.charAt(0).toUpperCase();\r\n                        word = character + word.substr(1);\r\n                    }\r\n                });\r\n            }\r\n\r\n            sentence = sentence.replace(match, word);\r\n        });\r\n\r\n        return sentence;\r\n    }\r\n\r\n    getLanguage() {\r\n        return this.currentLanguage$.getValue();\r\n    }\r\n\r\n    getDictionary() {\r\n        return this.dictionary;\r\n    }\r\n\r\n    private verify(language: string) {\r\n        // Check if the language already exists.\r\n        if (language !== null && this.isLanguageSupported(language)) {\r\n            return language;\r\n        }\r\n\r\n        // Fetch the browser language.\r\n        let browserLanguage = this.getBrowserLanguage();\r\n\r\n        // Check if the browsers language is supported in the system.\r\n        if (!this.isLanguageSupported(browserLanguage)) {\r\n            browserLanguage = this.defaultDictionary[0].languages[0];\r\n        }\r\n\r\n        // If the browser language was not supported put one in the storage.\r\n        if (this.storage) {\r\n            this.storage.set<string>(this.storageToken, browserLanguage);\r\n        }\r\n\r\n        // Return the browser language.\r\n        return browserLanguage;\r\n    }\r\n\r\n    private getBrowserLanguage() {\r\n        let language = null;\r\n\r\n        // Check if the navigator exists.\r\n        if (!navigator) {\r\n            return language;\r\n        }\r\n\r\n        // Get the correct first language of the browser.\r\n        if (navigator.languages && navigator.languages.length) {\r\n            language = navigator.languages[0];\r\n        } else if (navigator['userLanguage']) {\r\n            language = navigator['userLanguage'];\r\n        } else {\r\n            language = navigator.language;\r\n        }\r\n\r\n        return language;\r\n    }\r\n\r\n    private getLanguageDictionary(language: string) {\r\n        for (let item of this.dictionary) {\r\n            if (item.languages.indexOf(language) > -1) {\r\n                return item.data;\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    private isLanguageSupported(language: string) {\r\n        for (let item of this.dictionary) {\r\n            if (item.languages.indexOf(language) > -1) {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    private validate() {\r\n        const array = [];\r\n\r\n        this.dictionary.forEach(language => {\r\n            if (!language.data) {\r\n                return;\r\n            }\r\n\r\n            const data = this.getKeys(language.data);\r\n            array.push(data);\r\n        });\r\n\r\n        const first = array[0] || [];\r\n\r\n        return array.every(element => this.compare(first, element));\r\n    }\r\n\r\n    private getKeys(object: object, identifier: string = null) {\r\n        const result = [];\r\n\r\n        Object.keys(object).forEach(key => {\r\n            const item = object[key];\r\n\r\n            if (typeof item === 'object') {\r\n                result.push(...this.getKeys(item, identifier ? (identifier + '.' + key) : key));\r\n            } else {\r\n                result.push(identifier ? (identifier + '.' + key) : key);\r\n            }\r\n        });\r\n\r\n        return result;\r\n    }\r\n\r\n    private compare(first: string[], second: string[]) {\r\n        if (first === second) {\r\n            return true;\r\n        }\r\n\r\n        if (first === null || second === null) {\r\n            return false;\r\n        }\r\n\r\n        let isValid = true;\r\n\r\n        if (first.length !== second.length) {\r\n            console.warn('The files have been compared and not every file has the same length.');\r\n            isValid = false;\r\n        }\r\n\r\n        for (let index = 0; index < first.length; ++index) {\r\n            if (first[index] !== second[index]) {\r\n                isValid = false;\r\n                console.warn(`Line ${index} did not equal the first language.json file; ${first[index]} !== ${second[index]}`);\r\n            }\r\n        }\r\n\r\n        return isValid;\r\n    }\r\n\r\n    private notify(message: string) {\r\n        if (this.config && this.config.production) {\r\n            console.warn(message);\r\n            return;\r\n        }\r\n        throw new Error(message);\r\n    }\r\n\r\n}\r\n",
    "export class TranslationsConfig {\r\n    production: boolean = false;\r\n    dictionary: Dictionary[] = [];\r\n}\r\n\r\nexport interface Dictionary {\r\n\r\n    /**\r\n     * The browser languages that should activate this data set.\r\n     */\r\n    languages: string[];\r\n\r\n    /**\r\n     * The data JSON.\r\n     */\r\n    data: object;\r\n\r\n    /**\r\n     * The name of the translation.\r\n     */\r\n    name: string;\r\n\r\n}\r\n\r\nexport interface Translation {\r\n\r\n    /**\r\n     * The token of the translation.\r\n     */\r\n    token: string;\r\n\r\n    /**\r\n     * The key-value extras.\r\n     */\r\n    data: TranslationExtras;\r\n\r\n}\r\n\r\nexport interface TranslationExtras {\r\n\r\n    /**\r\n     * The key-value extras.\r\n     */\r\n    [token: string]: string;\r\n\r\n}"
  ],
  "names": [],
  "mappings": "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"
}
